---
- name: Install and Configure Prometheus and Grafana
  hosts: monitoring
  become: yes
  vars:
    prometheus_version: 2.45.0
    prometheus_config_dir: /etc/prometheus
    prometheus_data_dir: /var/lib/prometheus
    node_exporter_version: 1.6.1
    grafana_version: 10.0.3

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install prerequisites
      apt:
        name:
          - wget
          - curl
          - apt-transport-https
          - software-properties-common
          - gnupg
        state: present

    # Create Prometheus user and directories
    - name: Create Prometheus system group
      group:
        name: prometheus
        state: present
        system: yes

    - name: Create Prometheus system user
      user:
        name: prometheus
        group: prometheus
        shell: /sbin/nologin
        system: yes
        createhome: no

    - name: Create Prometheus directories
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: 0755
      with_items:
        - "{{ prometheus_config_dir }}"
        - "{{ prometheus_data_dir }}"
        - /tmp/prometheus

    # Install Prometheus
    - name: Download Prometheus
      get_url:
        url: https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz
        dest: /tmp/prometheus.tar.gz
        mode: 0644

    - name: Extract Prometheus
      unarchive:
        src: /tmp/prometheus.tar.gz
        dest: /tmp/prometheus
        remote_src: yes
        creates: /tmp/prometheus/prometheus-{{ prometheus_version }}.linux-amd64

    - name: Copy Prometheus binaries
      copy:
        src: "/tmp/prometheus/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        owner: prometheus
        group: prometheus
        mode: 0755
        remote_src: yes
      with_items:
        - prometheus
        - promtool

    - name: Copy Prometheus config files
      copy:
        src: "/tmp/prometheus/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "{{ prometheus_config_dir }}/"
        owner: prometheus
        group: prometheus
        mode: 0644
        remote_src: yes
      with_items:
        - prometheus.yml
        - console_libraries
        - consoles

    # Create Prometheus service
    - name: Create Prometheus systemd service
      template:
        src: templates/prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
        owner: root
        group: root
        mode: 0644
      register: prometheus_service_file

    # Install Node Exporter
    - name: Download Node Exporter
      get_url:
        url: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
        dest: /tmp/node_exporter.tar.gz
        mode: 0644

    - name: Extract Node Exporter
      unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /tmp
        remote_src: yes
        creates: /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64

    - name: Copy Node Exporter binary
      copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: /usr/local/bin/node_exporter
        owner: prometheus
        group: prometheus
        mode: 0755
        remote_src: yes

    # Create Node Exporter service
    - name: Create Node Exporter systemd service
      template:
        src: templates/node_exporter.service.j2
        dest: /etc/systemd/system/node_exporter.service
        owner: root
        group: root
        mode: 0644
      register: node_exporter_service_file

    # Install Grafana
    - name: Add Grafana apt key
      apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana repository
      apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        state: present

    - name: Install Grafana
      apt:
        name: grafana
        state: present
        update_cache: yes

    # Install SmokePing
    - name: Install SmokePing
      apt:
        name:
          - smokeping
          - apache2
        state: present

    - name: Start and enable SmokePing
      service:
        name: smokeping
        state: started
        enabled: yes

    # Start services
    - name: Reload systemd
      systemd:
        daemon_reload: yes
      when: prometheus_service_file.changed or node_exporter_service_file.changed

    - name: Start and enable Prometheus
      service:
        name: prometheus
        state: started
        enabled: yes

    - name: Start and enable Node Exporter
      service:
        name: node_exporter
        state: started
        enabled: yes

    - name: Start and enable Grafana
      service:
        name: grafana-server
        state: started
        enabled: yes

    # Create template files
    - name: Create prometheus.service template
      copy:
        dest: templates/prometheus.service.j2
        content: |
          [Unit]
          Description=Prometheus
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/usr/local/bin/prometheus \
            --config.file={{ prometheus_config_dir }}/prometheus.yml \
            --storage.tsdb.path={{ prometheus_data_dir }} \
            --web.console.templates={{ prometheus_config_dir }}/consoles \
            --web.console.libraries={{ prometheus_config_dir }}/console_libraries \
            --web.listen-address=0.0.0.0:9090 \
            --web.enable-lifecycle

          [Install]
          WantedBy=multi-user.target
        mode: 0644
        
    - name: Create node_exporter.service template
      copy:
        dest: templates/node_exporter.service.j2
        content: |
          [Unit]
          Description=Node Exporter
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/usr/local/bin/node_exporter

          [Install]
          WantedBy=multi-user.target
        mode: 0644
        
    # Base prometheus.yml configuration
    - name: Create base prometheus.yml configuration
      copy:
        dest: "{{ prometheus_config_dir }}/prometheus.yml"
        content: |
          global:
            scrape_interval: 15s
            evaluation_interval: 15s

          alerting:
            alertmanagers:
              - static_configs:
                  - targets:
                    # - alertmanager:9093

          rule_files:
            # - "first_rules.yml"
            # - "second_rules.yml"

          scrape_configs:
            - job_name: "prometheus"
              static_configs:
                - targets: ["localhost:9090"]
                
            - job_name: "node_exporter"
              static_configs:
                - targets: ["localhost:9100"]
                - targets: ["jenkins-server:9100"]
                - targets: ["db-server:9100"]
                - targets: ["app-server:9100"]
                
            - job_name: "jenkins"
              metrics_path: /prometheus
              static_configs:
                - targets: ["jenkins-server:8080"]
        owner: prometheus
        group: prometheus
        mode: 0644